@mixin position ($position, $top: null, $right: null, $left: null, $bottom: null) {
    position: $position;
    top: $top;
    right: $right;
    left: $left;
    bottom: $bottom;
}

@mixin absolute ($args...) {
    @include position(absolute, $args...);
}
@mixin fixed ($args...) {
    @include position(fixed, $args...);
}
@mixin relative ($args...) {
    @include position(relative, $args...);
}

@mixin input-placeholder {
    &.placeholder { @content; }
    &:-moz-placeholder { @content; }
    &::-moz-placeholder { @content; }
    &:-ms-input-placeholder { @content; }
    &::-webkit-input-placeholder { @content; }
}

@mixin transition($prop: easy, $time: .3s){
    -webkit-transition: $prop $time;
    -moz-transition: $prop $time;
    -ms-transition: $prop $time;
    -o-transition: $prop $time;
    transition: $prop $time;
}

$breakpoints: (
    "phone-ultra-small":  340px,
    "phone-small":  380px,
    "phone":        415px,
    "phone-wide":   480px,
    "phablet":      576px,
    "tablet-small": 640px,
    "tablet":       768px,
    "tablet-large": 992px,
    "tablet-wide":  1024px,
    "desktop-small": 1100px,
    "desktop":      1280px,
    "desktop-large":1366px,
    "desktop-wide": 1445px,
    "desktop-extra-large": 1600px,
    "desktop-full": 1920px,
);
@mixin mq($width, $type: min) {
    @if map_has_key($breakpoints, $width) {
        $width: map_get($breakpoints, $width);
        @if $type == max {
            $width: $width - 1px;
        }
        @media only screen and (#{$type}-width: $width) {
            @content;
        }
    }
}

@mixin bg ($url: null) {
    background: {
        image: url($url);
        repeat: no-repeat;
        position: center;
        size: cover;
    }
}


@mixin padding_default(){
    // border-radius: 50%;
    padding: 0.5rem 0.75rem;

    @include mq('tablet', max){
        padding: 0.1rem 0.5rem;
    }
}
